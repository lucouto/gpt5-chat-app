import os
from azure.search.documents import SearchClient
from azure.core.credentials import AzureKeyCredential
from openai import AzureOpenAI

# --- CONFIG ---
SEARCH_ENDPOINT = "https://aisearchmissionjeune.search.windows.net"
SEARCH_INDEX = "wtp2025-rag"
SEARCH_API_KEY = os.getenv("AZURE_SEARCH_API_KEY")  # put your key in env
#AZURE_OPENAI_ENDPOINT = "https://openai-cnjeunes.openai.azure.com"
#AZURE_OPENAI_API_KEY = os.getenv("AZURE_OPENAI_API_KEY")  # put your key in env
EMBEDDING_DEPLOYMENT = "text-embedding-3-small"  # matches your JSON
AZURE_OPENAI_ENDPOINT = os.getenv("AZURE_OPENAI_ENDPOINT")
AZURE_OPENAI_API_KEY = os.getenv("AZURE_OPENAI_API_KEY")


# --- INIT CLIENTS ---
search_client = SearchClient(
    endpoint=SEARCH_ENDPOINT,
    index_name=SEARCH_INDEX,
    credential=AzureKeyCredential(SEARCH_API_KEY)
)

openai_client = AzureOpenAI(
    azure_endpoint=AZURE_OPENAI_ENDPOINT,
    api_key=AZURE_OPENAI_API_KEY,
    api_version="2025-01-01-preview"
)

def rag_search(query):
    # Step 1: Create embedding from query
    embedding = openai_client.embeddings.create(
        model=EMBEDDING_DEPLOYMENT,
        input=query
    ).data[0].embedding

    # Step 2: Vector search against 'text_vector'
    results = search_client.search(
        search_text=None,
        vector_queries=[{
            "vector": embedding,
            "fields": "text_vector",
            "k": 3
        }],
        select=["chunk", "title"]
    )

    print("\n=== Search Results ===")
    for doc in results:
        print(f"Title: {doc.get('title', '')}")
        print(f"Chunk: {doc['chunk']}")
        print("----------------------")

if __name__ == "__main__":
    user_query = input("Enter your test question: ")
    rag_search(user_query)
